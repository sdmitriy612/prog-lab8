package ru.sdmitriy612.command;

import ru.sdmitriy612.interactors.Request;
import ru.sdmitriy612.interactors.Response;


/**
 * Abstract class representing a command in the program.
 * <p>
 * A command has a description, a command type, and an execution method.
 * </p>
 */
public abstract class Command {
    private final String description;
    private final CommandType commandType;

    /**
     * Constructs a new command with the specified description and command type.
     *
     * @param description the description of the command
     * @param commandType the type of the command
     */
    protected Command(String description, CommandType commandType){
        this.description = description;
        this.commandType = commandType;
    }

    /**
     * Executes the command with the given request.
     *
     * @param commandArgs the request to be processed by the command
     * @return the response generated by executing the command
     */
    public abstract Response execute(CommandArgs commandArgs);

    /**
     * Returns the type of the command.
     *
     * @return the command type
     */
    public CommandType getCommandType(){
        return commandType;
    }

    /**
     * Returns the description of the command.
     *
     * @return the command description
     */
    public String getDescription(){
        return description;
    }
}
